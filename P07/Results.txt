====================
HOMEWORK P07 RESULTS
====================

FULL CREDIT
===========

NOTE: These are measurements which may vary plus your opinions which may vary a LOT. We won't grade for "correctness", just completeness.

QUESTION 1: What command line argument(s) did you use to achieve a 45 to 60 second runtime? Note: We're only interested in the "real" seconds for this question if you are using the bash time command.




QUESTION 2: Provide the full output (including the time command) for your program, with 1 to 16 threads. **Ensure that the result is the same for all 16 runs.** With bash, you can run all of these with a single command if you like, replacing "76" with whatever command line arguments you identified in QUESTION 1: 

for i in {1..16} ; do echo ; echo $i Threads; time java turing/BreakEnigmaFile 76 $i ; done







QUESTION 3: Does adding more threads continue to speed up the program? Do more threads ever slow down the program slightly?  Why or why not?




QUESTION 4: Does adding more threads increase the "system load", or is it constant regardless of the number of threads?  Why?




BONUS
=====

QUESTION 5: Time your Bonus version of as you did for the Full Credit version. Is this additional layer of threading faster, slower, or roughly equivalent in performance? Why?





QUESTION 6: Which did you find easier to code overall, the hard-coded allocation or the thread pool? Why?






